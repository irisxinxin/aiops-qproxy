### AIOps reusable context
- service: omada-central
- region: dev-nbu-aps1
- category: cpu
- severity: critical
- title: omada-central container cpu usage upper 0.9
- duration: 15m
- window: 5m
- threshold: 0.9

#### SOP (selected)
### [SOP] Preloaded knowledge (high priority)
#### CPU 告警处理
- Precheck: 使用 victoriametrics MCP 查询: sum(rate(container_cpu_usage_seconds_total{container!="POD",container!="", container!="istio-proxy", image!="",pod=~"omada-central.*", namespace=~"sdn5"}[5m])) by (pod, container) / sum(kube_pod_container_resource_limits{container!="POD",pod=~"omada-central.*", namespace=~"sdn5", resource="cpu"} > 0) by (pod, container)>0.9 (告警自带表达式)
- Precheck: 使用 awslabseks_mcp_server 检查 Pod 状态和资源限制
- Action: 1. 扩容 Pod 数量
- Action: 2. 增加 CPU 资源限制
- Action: 3. 检查是否有异常进程
- Note: CPU 使用率过高时的处理步骤
#### CloudWatch 指标检查
- Precheck: 使用 awslabscloudwatch_mcp_server 查看 AWS 资源指标
- Action: 1. 对比 CloudWatch 和 K8s 指标
- Action: 2. 检查 AWS 资源健康状况
- Action: 3. 分析跨云指标差异
- Note: CloudWatch 指标监控和对比

#### Model Output (cleaned)
# SOP Knowledge
### [SOP] Preloaded knowledge (high priority)
#### CPU 告警处理
- Precheck: 使用 victoriametrics MCP 查询: sum(rate(container_cpu_usage_seconds_total{container!="POD",container!="", container!="istio-proxy", image!="",pod=~"omada-central.*", namespace=~"sdn5"}[5m])) by (pod, container) / sum(kube_pod_container_resource_limits{container!="POD",pod=~"omada-central.*", namespace=~"sdn5", resource="cpu"} > 0) by (pod, container)>0.9 (告警自带表达式)
- Precheck: 使用 awslabseks_mcp_server 检查 Pod 状态和资源限制
- Action: 1. 扩容 Pod 数量
- Action: 2. 增加 CPU 资源限制
- Action: 3. 检查是否有异常进程
- Note: CPU 使用率过高时的处理步骤
#### CloudWatch 指标检查
- Precheck: 使用 awslabscloudwatch_mcp_server 查看 AWS 资源指标
- Action: 1. 对比 CloudWatch 和 K8s 指标
- Action: 2. 检查 AWS 资源健康状况
- Action: 3. 分析跨云指标差异
- Note: CloudWatch 指标监控和对比


You are an AIOps root cause analysis assistant. Your role is to:
1. Perform ALL relevant prechecks using available MCP servers to gather comprehensive data
2. Execute additional checks as needed to validate root cause hypothesis
3. Analyze the alert and provide root cause attribution based on ALL gathered data
4. Reference SOP actions and historical context as guidance
5. Provide actionable recommendations based on complete analysis

IMPORTANT: Continue analysis until you have conclusive evidence. Don't just suggest checks - execute them.
EFFICIENCY NOTE: Limit tools to 3-5 key queries, focus on most impactful evidence.

Available MCP servers:
- victoriametrics: Query VictoriaMetrics for Kubernetes and application metrics
- awslabseks_mcp_server: Manage EKS clusters and check pod status
- elasticsearch_mcp_server: Query Elasticsearch logs and data
- awslabscloudwatch_mcp_server: Access AWS CloudWatch metrics
- alertmanager: Manage alert configurations and status

Analyze the following alert and provide a JSON response.

Alert to analyze:
{
  "category": "cpu",
  "duration": "15m",
  "env": "dev",
  "group_id": "omada-central_critical",
  "metadata": {
    "alert_name": "omada-central container cpu usage upper 0.9",
    "alertgroup": "omada-central",
    "alertname": "omada-central container cpu usage upper 0.9",
    "auto_create_group": false,
    "comparison": "\u003e",
    "container": "omada-central",
    "datasource_cluster": "dev-nbu-aps1",
    "department": "[ERD|Enterprise Software (CD)|Cloud (CD)|VIGI]",
    "duration": "300s",
    "expression": "sum(rate(container_cpu_usage_seconds_total{container!=\"POD\",container!=\"\", container!=\"istio-proxy\", image!=\"\",pod=~\"omada-central.*\", namespace=~\"sdn5\"}[5m])) by (pod, container) / sum(kube_pod_container_resource_limits{container!=\"POD\",pod=~\"omada-central.*\", namespace=~\"sdn5\", resource=\"cpu\"} \u003e 0) by (pod, container)\u003e0.9",
    "group_id": "omada-central_critical",
    "pod": "omada-central-5.15.16041-56f89cbc98-vxbzh",
    "prometheus": "monitoring/kps-prometheus",
    "service_name": "omada-central",
    "severity": "critical",
    "tel_up": "30m",
    "threshold_value": 0.9
  },
  "region": "dev-nbu-aps1",
  "service": "omada-central",
  "severity": "critical",
  "status": "firing",
  "threshold": "0.9",
  "title": "omada-central container cpu usage upper 0.9",
  "window": "5m"
}

After completing your analysis, provide a JSON response with the following structure:
{
  "root_cause": "string describing the likely root cause based on comprehensive metrics analysis",
  "evidence": ["array", "of", "supporting", "evidence", "from", "metrics", "and", "logs"],
  "confidence": 0.0,
  "suggested_actions": ["array", "of", "specific", "recommended", "actions", "based", "on", "complete", "analysis"],
  "analysis_summary": "brief summary of your investigation process and findings"
}
